/* tslint:disable:all */
/**
 * Generic Error Class resolver
 */
import { ErrorCode } from "./../../lib/infrastructure/ErrorEnum";
import { StatusCodeEnum } from "./../../lib/infrastructure/StatusCodeEnum";
export declare type KushkiErrorAttr<T extends string = ErrorCode, V = StatusCodeEnum> = {
    code: T;
    statusCode: V;
    message: string;
};
export declare type KushkiErrors<T extends string = ErrorCode, V = StatusCodeEnum> = {
    [k in T]: KushkiErrorAttr<T, V>;
};
/**
 * KushkiError Generic captured error.
 */
export declare class KushkiError extends Error {
    readonly code: string;
    private readonly _customMessage;
    private readonly _error;
    constructor(error: KushkiErrorAttr, message?: string | null);
    getMessage(): string | null;
    getStatusCode(): StatusCodeEnum;
}
