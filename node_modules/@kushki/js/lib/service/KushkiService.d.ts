/* tslint:disable:all */
import "reflect-metadata";
import { IKushkiGateway } from "./../../lib/repository/IKushkiGateway";
import { IKushkiService } from "./../../lib/repository/IKushkiService";
import { Observable } from "rxjs";
import { ErrorResponse } from "./../../lib/types/error_response";
import { GetBrandsLogosByMerchantResponse } from "./../../lib/types/get_brands_logos_by_merchant_response";
import { ResponseStatusValidator } from "./../../lib/types/response_status_validator";
import { VisaBrandingRequest } from "./../../lib/types/visa_branding_request";
declare global {
    interface Window {
        VisaSensoryBranding: any;
    }
}
/**
 * Implementation
 */
export declare class KushkiService implements IKushkiService {
    private readonly _gateway;
    constructor(gateway: IKushkiGateway);
    checkStatus(mid: string, isTest: boolean, regional: boolean): Observable<ResponseStatusValidator>;
    requestBrandsByMerchant(mid: string, isTest: boolean, regional: boolean): Observable<string[]>;
    requestBrandsLogosByMerchant(mid: string, isTest: boolean, regional: boolean): Observable<GetBrandsLogosByMerchantResponse[]>;
    initVisaBrandingAnimation(isTest: boolean, callback: (error?: ErrorResponse) => void, body?: VisaBrandingRequest): void;
}
