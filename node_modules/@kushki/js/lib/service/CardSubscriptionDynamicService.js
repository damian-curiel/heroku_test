"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
exports.__esModule = true;
exports.CardSubscriptionDynamicService = void 0;
/**
 * CardDynamic Service
 */
var Identifiers_1 = require("./../../lib/constant/Identifiers");
var BinCardTypeEnum_1 = require("./../../lib/infrastructure/BinCardTypeEnum");
var inversify_1 = require("inversify");
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var Kushki_1 = require("./../../lib/Kushki");
/**
 * Implementation
 */
var CardSubscriptionDynamicService = /** @class */ (function () {
    function CardSubscriptionDynamicService(cardService, cardAsyncService) {
        this._cardServiceSubscription = cardService;
        this._cardAsyncServiceSubscription = cardAsyncService;
    }
    CardSubscriptionDynamicService.prototype.requestCardSubscriptionDynamicToken = function (bin, body, mid, testEnv, regional, callback) {
        var _this = this;
        rxjs_1.of(1)
            .pipe(operators_1.concatMap(function () {
            return _this._cardServiceSubscription.requestBinInfo(bin, mid, testEnv, regional);
        }))
            .subscribe({
            next: function (binInfo) {
                if (binInfo.cardType === BinCardTypeEnum_1.BinCardTypeEnum.debit)
                    _this._requestCardSubscriptionAsyncToken(body, mid, testEnv, regional, callback);
                else
                    _this._requestCardSubscriptionToken(body, mid, testEnv, regional, callback);
            }
        });
    };
    CardSubscriptionDynamicService.prototype._requestCardSubscriptionAsyncToken = function (body, mid, testEnv, regional, callback) {
        var _this = this;
        rxjs_1.of(1)
            .pipe(operators_1.mergeMap(function () {
            return _this._cardAsyncServiceSubscription.requestCardSubscriptionAsyncToken(body, mid, testEnv, regional);
        }))
            .subscribe({
            error: function (err) {
                return Kushki_1.Kushki.callbackError(err, callback);
            },
            next: function (token) {
                callback(token);
            }
        });
    };
    CardSubscriptionDynamicService.prototype._requestCardSubscriptionToken = function (body, mid, testEnv, regional, callback) {
        this._cardServiceSubscription.requestSubscriptionToken(body, mid, testEnv, regional, callback);
    };
    CardSubscriptionDynamicService = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(Identifiers_1.IDENTIFIERS.CardService)),
        __param(1, inversify_1.inject(Identifiers_1.IDENTIFIERS.CardAsyncService)),
        __metadata("design:paramtypes", [Object, Object])
    ], CardSubscriptionDynamicService);
    return CardSubscriptionDynamicService;
}());
exports.CardSubscriptionDynamicService = CardSubscriptionDynamicService;
