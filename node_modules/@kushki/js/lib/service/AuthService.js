"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.AuthService = void 0;
var aws_amplify_1 = require("aws-amplify");
var axios_1 = require("axios");
var Identifiers_1 = require("./../../lib/constant/Identifiers");
var KushkiError_1 = require("./../../lib/generic/KushkiError");
var CognitoErrorEnum_1 = require("./../../lib/infrastructure/CognitoErrorEnum");
var ErrorEnum_1 = require("./../../lib/infrastructure/ErrorEnum");
var KPayUserPoolEnum_1 = require("./../../lib/infrastructure/KPayUserPoolEnum");
var inversify_1 = require("inversify");
require("reflect-metadata");
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var UtilsService_1 = require("./../../lib/service/UtilsService");
/**
 * Implementation
 */
var AuthService = /** @class */ (function () {
    function AuthService(gateway) {
        this._gateway = gateway;
    }
    AuthService_1 = AuthService;
    AuthService.prototype.requestInitAuth = function (body, isTestEnvironment) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () {
            return AuthService_1._configureAmplifyCredentials(isTestEnvironment);
        }), operators_1.mergeMap(function () { return _this._validateCurrentSession(body.email); }), operators_1.mergeMap(function (sessionJwt) {
            return rxjs_1.iif(function () { return !!sessionJwt; }, rxjs_1.of({ result: true }), _this._handleInitAuth(body.email));
        }));
    };
    AuthService.prototype.requestVerifyAuth = function (code, isTestEnvironment) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () {
            return AuthService_1._configureAmplifyCredentials(isTestEnvironment);
        }), operators_1.concatMap(function () {
            return rxjs_1.from(aws_amplify_1.Auth.sendCustomChallengeAnswer(_this._cognitoUser, code));
        }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E009)); }), operators_1.concatMap(function () { return _this._verifyCurrentSession(); }), operators_1.map(function (session) { return ({
            authorization: session.getRefreshToken().getToken()
        }); }));
    };
    AuthService.prototype.validateSession = function (isTestEnvironment) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () {
            return AuthService_1._configureAmplifyCredentials(isTestEnvironment);
        }), operators_1.concatMap(function () { return _this._getCurrentUserEmail(); }));
    };
    AuthService.prototype.getAuthorizationToken = function () {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () { return _this._currentAuthenticatedUser(); }), operators_1.mergeMap(function (cognitoUser) {
            var session = cognitoUser ? cognitoUser.getSignInUserSession() : null;
            if (!session)
                return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E011));
            return rxjs_1.of(session.getAccessToken().getJwtToken());
        }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E011)); }));
    };
    AuthService.prototype._currentAuthenticatedUser = function () {
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () { return rxjs_1.from(aws_amplify_1.Auth.currentAuthenticatedUser()); }));
    };
    AuthService.prototype._verifyCurrentSession = function () {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return rxjs_1.from(aws_amplify_1.Auth.currentSession()); }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E008)); }));
    };
    AuthService.prototype._handleInitAuth = function (email) {
        var _this = this;
        var password = AuthService_1._getRandomString();
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () {
            var user_attributes = {
                "custom:merchant": email,
                given_name: email,
                preferred_username: email
            };
            var params = {
                password: password,
                attributes: user_attributes,
                username: email
            };
            return rxjs_1.from(aws_amplify_1.Auth.signUp(params));
        }), operators_1.concatMap(function () { return _this._userSignIn(email, password); }), operators_1.concatMap(function (cognitoUser) {
            _this._cognitoUser = cognitoUser;
            return cognitoUser
                .getSignInUserSession()
                .getAccessToken()
                .getJwtToken();
        }), operators_1.concatMap(function (authorization) {
            return rxjs_1.iif(function () { return !!authorization; }, rxjs_1.of({ result: true }), rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E001)));
        }), operators_1.catchError(function (error) {
            var error_code = UtilsService_1.UtilsService.sGet(error, "code", "");
            return rxjs_1.iif(function () { return error_code === CognitoErrorEnum_1.CognitoErrorEnum.UsernameExistsException; }, _this._userSignInPasswordles(email), rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E007)));
        }));
    };
    AuthService.prototype._validateCurrentSession = function (email) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return aws_amplify_1.Auth.currentSession(); }), operators_1.concatMap(function (session) {
            return rxjs_1.forkJoin([rxjs_1.of(session), rxjs_1.from(aws_amplify_1.Auth.currentUserInfo())]);
        }), operators_1.concatMap(function (_a) {
            var session = _a[0], current_user_info = _a[1];
            if (email &&
                current_user_info.attributes.email.toLowerCase() !==
                    email.toLowerCase())
                return _this._signOut();
            return rxjs_1.of(session.getAccessToken().getJwtToken());
        }), operators_1.catchError(function () { return _this._signOut(); }));
    };
    AuthService.prototype._getCurrentUserEmail = function () {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return aws_amplify_1.Auth.currentUserInfo(); }), operators_1.concatMap(function (currentInfo) {
            return rxjs_1.iif(function () { return !!currentInfo.attributes.email; }, rxjs_1.of({
                email: currentInfo.attributes.email.toLowerCase()
            }), rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E011)));
        }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E011)); }));
    };
    AuthService.prototype._signOut = function () {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return aws_amplify_1.Auth.signOut(); }), operators_1.mapTo(false));
    };
    AuthService.prototype._userSignIn = function (email, password) {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return rxjs_1.from(aws_amplify_1.Auth.signIn(email, password)); }));
    };
    AuthService.prototype._userSignInPasswordles = function (email) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () { return rxjs_1.from(aws_amplify_1.Auth.signIn(email)); }), operators_1.mergeMap(function (cognitoUser) {
            _this._cognitoUser = cognitoUser;
            return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E010));
        }));
    };
    AuthService._configureAmplifyCredentials = function (test) {
        return __awaiter(this, void 0, void 0, function () {
            var remote_kpay_user_pool_url, cognito_config, auth;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        remote_kpay_user_pool_url = "" + (test ? KPayUserPoolEnum_1.KPayUserPoolEnum.uat : KPayUserPoolEnum_1.KPayUserPoolEnum.prod);
                        return [4 /*yield*/, axios_1["default"].get(remote_kpay_user_pool_url)];
                    case 1:
                        cognito_config = (_a.sent()).data;
                        auth = {
                            cognito: {
                                APP_CLIENT_ID: cognito_config.appClientId,
                                REGION: cognito_config.region,
                                USER_POOL_ID: cognito_config.userPoolId
                            }
                        };
                        aws_amplify_1.Auth.configure({
                            Auth: {
                                mandatorySignId: true,
                                region: auth.cognito.REGION,
                                storage: window.sessionStorage,
                                userPoolId: auth.cognito.USER_POOL_ID,
                                userPoolWebClientId: auth.cognito.APP_CLIENT_ID
                            }
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    AuthService._getRandomString = function () {
        return (
        // tslint:disable-next-line:insecure-random
        Math.random()
            .toString(36)
            .slice(2) +
            // tslint:disable-next-line:insecure-random
            Math.random()
                .toString(36)
                .toUpperCase()
                .slice(2));
    };
    var AuthService_1;
    AuthService = AuthService_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(Identifiers_1.IDENTIFIERS.KushkiGateway)),
        __metadata("design:paramtypes", [Object])
    ], AuthService);
    return AuthService;
}());
exports.AuthService = AuthService;
