/* tslint:disable:all */
import "reflect-metadata";
import { IAuthService } from "./../../lib/repository/IAuthService";
import { IKushkiGateway } from "./../../lib/repository/IKushkiGateway";
import { Observable } from "rxjs";
import { InitAuthRequest } from "./../../lib/types/init_auth_request";
import { InitAuthResponse } from "./../../lib/types/init_auth_response";
import { ValidateSessionResponse } from "./../../lib/types/validate_session_response";
import { VerifyAuthResponse } from "./../../lib/types/verify_auth_response";
/**
 * Implementation
 */
export declare class AuthService implements IAuthService {
    private readonly _gateway;
    private _cognitoUser?;
    constructor(gateway: IKushkiGateway);
    requestInitAuth(body: InitAuthRequest, isTestEnvironment: boolean): Observable<InitAuthResponse>;
    requestVerifyAuth(code: string, isTestEnvironment: boolean): Observable<VerifyAuthResponse>;
    validateSession(isTestEnvironment: boolean): Observable<ValidateSessionResponse>;
    getAuthorizationToken(): Observable<string>;
    private _currentAuthenticatedUser;
    private _verifyCurrentSession;
    private _handleInitAuth;
    private _validateCurrentSession;
    private _getCurrentUserEmail;
    private _signOut;
    private _userSignIn;
    private _userSignInPasswordles;
    private static _configureAmplifyCredentials;
    private static _getRandomString;
}
